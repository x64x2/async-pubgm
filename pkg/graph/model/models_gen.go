// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

type Media struct {
	ID       uuid.UUID    `json:"id"`
	Source   types.Source `json:"source"`
	SourceID string       `json:"sourceId"`
	Type     string       `json:"type"`
	Visible  *bool        `json:"visible,omitempty"`
	Location *string      `json:"location,omitempty"`
	Preview  *string      `json:"preview,omitempty"`
}

type Message struct {
	ID       uuid.UUID    `json:"id"`
	Source   types.Source `json:"source"`
	SourceID string       `json:"sourceId"`
	Author   *Profile     `json:"author"`
	Date     time.Time    `json:"date"`
	Text     string       `json:"text"`
	Media    []*Media     `json:"media,omitempty"`
}

type Post struct {
	ID       uuid.UUID    `json:"id"`
	Source   types.Source `json:"source"`
	SourceID string       `json:"sourceId"`
	Author   *Profile     `json:"author"`
	Date     time.Time    `json:"date"`
	Text     string       `json:"text"`
	Media    []*Media     `json:"media,omitempty"`
}

type Profile struct {
	ID       uuid.UUID    `json:"id"`
	Source   types.Source `json:"source"`
	SourceID string       `json:"sourceId"`
	Username string       `json:"username"`
	Name     string       `json:"name"`
	Avatar   *string      `json:"avatar,omitempty"`
	Header   *string      `json:"header,omitempty"`
	Posts    []*Post      `json:"posts,omitempty"`
	Messages []*Message   `json:"messages,omitempty"`
	Stories  []*tag     `json:"stories,omitempty"`
}

type Query struct {
}

type tag struct {
	ID       uuid.UUID    `json:"id"`
	Source   types.Source `json:"source"`
	SourceID string       `json:"sourceId"`
	Author   *Profile     `json:"author"`
	Date     time.Time    `json:"date"`
	Media    []*Media     `json:"media,omitempty"`
}
